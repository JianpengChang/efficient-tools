# 1. define the variables just like python
# 2. the script doesn't care the kernel and nfs dirs, they are only used in
#    the commands string. Script only use BOARD_ID to get IP, and the time 
#    to wait the board boot up.
# 3. if you want to define a shell variable in your commands, use export or
#    close is_echo.

BOARD_ID=28650
# define watit time
REBOOT_WAIT_TIME=300

NFS_SERVER_DIR="/home/jchang1/work/nfsd"

# yocto project parameters
YOCTO_PROJECT_BASE="/buildarea/jchan/lts23"
YOCTO_BUILD_DIR="build-rt"
KERNEL_SRC_DIR="/buildarea/jchan/linux-stable"

# define compile commands
COMPILE_COMMAND=f"""
cd {KERNEL_SRC_DIR}

make distclean
rm -rf testmodules/lib/modules
cp /buildarea/jchan/lts24/build-rt/tmp-glibc/work/intel_x86_64-wrs-linux/linux-yocto-rt/6.6.84+git/linux-intel_x86_64-preempt-rt-build/.config .
make olddefconfig
make -j$(nproc)
make INSTALL_MOD_PATH={KERNEL_SRC_DIR}/testmodules modules_install
cd testmodules/lib/modules
tar -cvf modules.tar $(ls)
mv modules.tar {KERNEL_SRC_DIR}
cd {KERNEL_SRC_DIR}
sha256sum arch/x86/boot/bzImage modules.tar
scp arch/x86/boot/bzImage  modules.tar root@jchang1-Meteor:{NFS_SERVER_DIR}
"""

# define reboot commands, it depends on your tools
REBOOT_COMMAND=f"reboot -t {BOARD_ID}"

NFS_DEPLOY=f"""
    uname -a
    cd {NFS_SERVER_DIR}
    cd bisect
    mv ../bzImage boot/bzImage-upstream
    mv ../modules.tar lib/modules
    cd boot && ln -sf bzImage-upstream bzImage
    sha256sum bzImage
    cd ../lib/modules && tar -xf modules.tar
    sha256sum modules.tar
"""

TEST_COMMAND=f"""
    echo "=== system information ==="
    uname -a
    cat /proc/cmdline
    cat /etc/os-release
    echo "=== hardware information ==="
    dmesg | tail -n 20
    echo "=== test commands ==="
    set +e
    /opt/wr-test/testcases/bts/dpdk_byteorder/runtest.sh -k 07:00.0
    if [ $? -eq 0 ]; then
        exit 1
    else
        exit 0
    fi
"""
